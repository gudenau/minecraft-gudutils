plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archivesBaseName
version = project.modVersion
group = project.mavenGroup

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://dl.bintray.com/ladysnake/libs"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraftVersion}"
	mappings "net.fabricmc:yarn:${project.yarnMappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loaderVersion}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:0.3.0'

	modApi include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.ccaVersion}")
	modImplementation include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.ccaVersion}")

	modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${project.reachAttributesVersion}")){
		transitive = false
	}

	modImplementation(include("io.github.ladysnake:PlayerAbilityLib:${project.playerAbilityLibVersion}")){
		transitive = false
	}

	// Funny extension methods
	implementation "systems.manifold:manifold-ext-rt:${project.manifoldVersion}"
	annotationProcessor "systems.manifold:manifold-ext:${project.manifoldVersion}"
}

minecraft {
	accessWidener = file("src/main/resources/gud_utils.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	options.compilerArgs = [
			'--release', '8', // Avoid using Java 9+ APIs
			'--enable-preview'
	]
	// The following line can be omitted on Java 14 and higher
	options.compilerArgs << '-Xplugin:jabel'

	doFirst {
		options.compilerArgs = options.compilerArgs.findAll {
			it != '--enable-preview'
		}
	}

	options.fork = true
	options.forkOptions.jvmArgs += '-Djdk.attach.allowAttachSelf=true'
	options.compilerArgs += ['-Xplugin:Manifold']
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
